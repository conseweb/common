// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	ConfigCryptoStrategyDefault
	ConfigSystem
	QueryResult
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 默认加密策略配置实体结构
type ConfigCryptoStrategyDefault struct {
	// 主哈希
	MainHash string `protobuf:"bytes,1,opt,name=main_hash,json=mainHash" json:"main_hash,omitempty"`
	// 副哈希
	SubHash string `protobuf:"bytes,2,opt,name=sub_hash,json=subHash" json:"sub_hash,omitempty"`
}

func (m *ConfigCryptoStrategyDefault) Reset()                    { *m = ConfigCryptoStrategyDefault{} }
func (m *ConfigCryptoStrategyDefault) String() string            { return proto.CompactTextString(m) }
func (*ConfigCryptoStrategyDefault) ProtoMessage()               {}
func (*ConfigCryptoStrategyDefault) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 业务系统配置实体结构
type ConfigSystem struct {
	// 业务系统名称
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// 业务系统加密策略类型
	CryptoStrategy string `protobuf:"bytes,2,opt,name=crypto_strategy,json=cryptoStrategy" json:"crypto_strategy,omitempty"`
	// 默认加密策略配置
	CryptoStrategyDefault *ConfigCryptoStrategyDefault `protobuf:"bytes,3,opt,name=crypto_strategy_default,json=cryptoStrategyDefault" json:"crypto_strategy_default,omitempty"`
}

func (m *ConfigSystem) Reset()                    { *m = ConfigSystem{} }
func (m *ConfigSystem) String() string            { return proto.CompactTextString(m) }
func (*ConfigSystem) ProtoMessage()               {}
func (*ConfigSystem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConfigSystem) GetCryptoStrategyDefault() *ConfigCryptoStrategyDefault {
	if m != nil {
		return m.CryptoStrategyDefault
	}
	return nil
}

// 查询实体
type QueryResult struct {
	// 键值
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// 键哈希值
	HashKey string `protobuf:"bytes,2,opt,name=hash_key,json=hashKey" json:"hash_key,omitempty"`
	// 是否存在
	Exist bool `protobuf:"varint,3,opt,name=exist" json:"exist,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*ConfigCryptoStrategyDefault)(nil), "main.config_crypto_strategy_default")
	proto.RegisterType((*ConfigSystem)(nil), "main.config_system")
	proto.RegisterType((*QueryResult)(nil), "main.query_result")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x89, 0xad, 0x9a, 0x8e, 0x56, 0x65, 0x50, 0xac, 0x08, 0x52, 0x82, 0x60, 0x4f, 0x39,
	0xe8, 0x57, 0xf0, 0x20, 0x78, 0x32, 0x5e, 0x3c, 0x08, 0xcb, 0xa6, 0x4e, 0x93, 0xa0, 0xf9, 0xe3,
	0xce, 0x2e, 0xb8, 0x5f, 0xc9, 0x4f, 0x29, 0x93, 0xdd, 0x8b, 0x82, 0xbd, 0xcd, 0xbc, 0xb7, 0xbc,
	0x7d, 0xbf, 0x81, 0x79, 0x4b, 0xcc, 0xba, 0xa2, 0x7c, 0x30, 0xbd, 0xed, 0x71, 0xda, 0xea, 0xa6,
	0xcb, 0x5e, 0xe0, 0x6a, 0xdd, 0x77, 0x9b, 0xa6, 0x52, 0x6b, 0xe3, 0x07, 0xdb, 0x2b, 0xb6, 0x46,
	0x5b, 0xaa, 0xbc, 0x7a, 0xa3, 0x8d, 0x76, 0x1f, 0x16, 0x2f, 0x61, 0x26, 0x2f, 0x55, 0xad, 0xb9,
	0x5e, 0x24, 0xcb, 0x64, 0x35, 0x2b, 0x52, 0x11, 0x1e, 0x34, 0xd7, 0x78, 0x01, 0x29, 0xbb, 0x32,
	0x78, 0x3b, 0xa3, 0xb7, 0xcf, 0xae, 0x14, 0x2b, 0xfb, 0x4e, 0x60, 0x1e, 0xa3, 0xd9, 0xb3, 0xa5,
	0x16, 0x11, 0xa6, 0x9d, 0x6e, 0x29, 0x86, 0x8c, 0x33, 0xde, 0xc0, 0xf1, 0x9f, 0x8f, 0x63, 0xce,
	0x51, 0x90, 0x9f, 0xa3, 0x8a, 0xaf, 0x70, 0xfe, 0x4f, 0xc3, 0xc5, 0x64, 0x99, 0xac, 0x0e, 0x6e,
	0xaf, 0x73, 0x69, 0x95, 0x6f, 0xa7, 0x29, 0xce, 0x7e, 0xc7, 0xde, 0x07, 0x39, 0x7b, 0x82, 0xc3,
	0x4f, 0x47, 0xc6, 0x2b, 0x43, 0x2c, 0xd0, 0x27, 0x30, 0x79, 0x27, 0x1f, 0x9b, 0xca, 0x28, 0xa4,
	0x42, 0xa9, 0x44, 0x8e, 0xa4, 0xb2, 0x3f, 0x92, 0xc7, 0x53, 0xd8, 0xa5, 0xaf, 0x86, 0x43, 0x91,
	0xb4, 0x08, 0x4b, 0xb9, 0x37, 0x9e, 0xf9, 0xee, 0x27, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xa2, 0x5d,
	0x53, 0x77, 0x01, 0x00, 0x00,
}

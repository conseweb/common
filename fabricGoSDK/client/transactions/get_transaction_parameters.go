package transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTransactionParams creates a new GetTransactionParams object
// with the default values initialized.
func NewGetTransactionParams() *GetTransactionParams {
	var ()
	return &GetTransactionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTransactionParamsWithTimeout creates a new GetTransactionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTransactionParamsWithTimeout(timeout time.Duration) *GetTransactionParams {
	var ()
	return &GetTransactionParams{

		timeout: timeout,
	}
}

/*GetTransactionParams contains all the parameters to send to the API endpoint
for the get transaction operation typically these are written to a http.Request
*/
type GetTransactionParams struct {

	/*ID
	  Transaction to retrieve from the blockchain.

	*/
	ID string

	timeout time.Duration
}

// WithID adds the id to the get transaction params
func (o *GetTransactionParams) WithID(id string) *GetTransactionParams {
	o.ID = id
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetTransactionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param ID
	if err := r.SetPathParam("ID", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

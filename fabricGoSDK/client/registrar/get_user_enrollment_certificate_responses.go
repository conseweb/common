package registrar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/conseweb/common/fabricGoSDK/models"
)

// GetUserEnrollmentCertificateReader is a Reader for the GetUserEnrollmentCertificate structure.
type GetUserEnrollmentCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetUserEnrollmentCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserEnrollmentCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetUserEnrollmentCertificateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetUserEnrollmentCertificateOK creates a GetUserEnrollmentCertificateOK with default headers values
func NewGetUserEnrollmentCertificateOK() *GetUserEnrollmentCertificateOK {
	return &GetUserEnrollmentCertificateOK{}
}

/*GetUserEnrollmentCertificateOK handles this case with default header values.

Confirm registration for target user and return the URL-encoded enrollment certificate
*/
type GetUserEnrollmentCertificateOK struct {
	Payload *models.OK
}

func (o *GetUserEnrollmentCertificateOK) Error() string {
	return fmt.Sprintf("[GET /registrar/{enrollmentID}/ecert][%d] getUserEnrollmentCertificateOK  %+v", 200, o.Payload)
}

func (o *GetUserEnrollmentCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserEnrollmentCertificateDefault creates a GetUserEnrollmentCertificateDefault with default headers values
func NewGetUserEnrollmentCertificateDefault(code int) *GetUserEnrollmentCertificateDefault {
	return &GetUserEnrollmentCertificateDefault{
		_statusCode: code,
	}
}

/*GetUserEnrollmentCertificateDefault handles this case with default header values.

Unexpected error
*/
type GetUserEnrollmentCertificateDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get user enrollment certificate default response
func (o *GetUserEnrollmentCertificateDefault) Code() int {
	return o._statusCode
}

func (o *GetUserEnrollmentCertificateDefault) Error() string {
	return fmt.Sprintf("[GET /registrar/{enrollmentID}/ecert][%d] getUserEnrollmentCertificate default  %+v", o._statusCode, o.Payload)
}

func (o *GetUserEnrollmentCertificateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

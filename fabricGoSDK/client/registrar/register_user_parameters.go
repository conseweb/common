package registrar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/conseweb/common/fabricGoSDK/models"
)

// NewRegisterUserParams creates a new RegisterUserParams object
// with the default values initialized.
func NewRegisterUserParams() *RegisterUserParams {
	var ()
	return &RegisterUserParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRegisterUserParamsWithTimeout creates a new RegisterUserParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRegisterUserParamsWithTimeout(timeout time.Duration) *RegisterUserParams {
	var ()
	return &RegisterUserParams{

		timeout: timeout,
	}
}

/*RegisterUserParams contains all the parameters to send to the API endpoint
for the register user operation typically these are written to a http.Request
*/
type RegisterUserParams struct {

	/*Secret
	  User enrollment credentials

	*/
	Secret *models.Secret

	timeout time.Duration
}

// WithSecret adds the secret to the register user params
func (o *RegisterUserParams) WithSecret(secret *models.Secret) *RegisterUserParams {
	o.Secret = secret
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *RegisterUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Secret == nil {
		o.Secret = new(models.Secret)
	}

	if err := r.SetBodyParam(o.Secret); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

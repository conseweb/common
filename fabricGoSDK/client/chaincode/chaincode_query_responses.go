package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/conseweb/common/fabricGoSDK/models"
)

// ChaincodeQueryReader is a Reader for the ChaincodeQuery structure.
type ChaincodeQueryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *ChaincodeQueryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChaincodeQueryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewChaincodeQueryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewChaincodeQueryOK creates a ChaincodeQueryOK with default headers values
func NewChaincodeQueryOK() *ChaincodeQueryOK {
	return &ChaincodeQueryOK{}
}

/*ChaincodeQueryOK handles this case with default header values.

Successfully queried chaincode
*/
type ChaincodeQueryOK struct {
	Payload *models.OK
}

func (o *ChaincodeQueryOK) Error() string {
	return fmt.Sprintf("[POST /devops/query][%d] chaincodeQueryOK  %+v", 200, o.Payload)
}

func (o *ChaincodeQueryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChaincodeQueryDefault creates a ChaincodeQueryDefault with default headers values
func NewChaincodeQueryDefault(code int) *ChaincodeQueryDefault {
	return &ChaincodeQueryDefault{
		_statusCode: code,
	}
}

/*ChaincodeQueryDefault handles this case with default header values.

Unexpected error
*/
type ChaincodeQueryDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the chaincode query default response
func (o *ChaincodeQueryDefault) Code() int {
	return o._statusCode
}

func (o *ChaincodeQueryDefault) Error() string {
	return fmt.Sprintf("[POST /devops/query][%d] chaincodeQuery default  %+v", o._statusCode, o.Payload)
}

func (o *ChaincodeQueryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

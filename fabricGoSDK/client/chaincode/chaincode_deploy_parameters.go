package chaincode

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/conseweb/common/fabricGoSDK/models"
)

// NewChaincodeDeployParams creates a new ChaincodeDeployParams object
// with the default values initialized.
func NewChaincodeDeployParams() *ChaincodeDeployParams {
	var ()
	return &ChaincodeDeployParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewChaincodeDeployParamsWithTimeout creates a new ChaincodeDeployParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewChaincodeDeployParamsWithTimeout(timeout time.Duration) *ChaincodeDeployParams {
	var ()
	return &ChaincodeDeployParams{

		timeout: timeout,
	}
}

/*ChaincodeDeployParams contains all the parameters to send to the API endpoint
for the chaincode deploy operation typically these are written to a http.Request
*/
type ChaincodeDeployParams struct {

	/*ChaincodeSpec
	  Chaincode specification message

	*/
	ChaincodeSpec *models.ChaincodeSpec

	timeout time.Duration
}

// WithChaincodeSpec adds the chaincodeSpec to the chaincode deploy params
func (o *ChaincodeDeployParams) WithChaincodeSpec(chaincodeSpec *models.ChaincodeSpec) *ChaincodeDeployParams {
	o.ChaincodeSpec = chaincodeSpec
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *ChaincodeDeployParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.ChaincodeSpec == nil {
		o.ChaincodeSpec = new(models.ChaincodeSpec)
	}

	if err := r.SetBodyParam(o.ChaincodeSpec); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

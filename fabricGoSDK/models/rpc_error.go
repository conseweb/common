package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*RPCError rpc error

swagger:model rpcError
*/
type RPCError struct {

	/* A number that indicates the error type that occurred.

	Required: true
	*/
	Code *int64 `json:"code"`

	/* A primitive or structured value that contains additional information about the error (e.g. detailed error information, nested errors etc.).
	 */
	Data *string `json:"data,omitempty"`

	/* A string providing a short description of the error.

	Required: true
	*/
	Message *string `json:"message"`
}

// Validate validates this rpc error
func (m *RPCError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMessage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RPCError) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("code", "body", m.Code); err != nil {
		return err
	}

	return nil
}

func (m *RPCError) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("message", "body", m.Message); err != nil {
		return err
	}

	return nil
}

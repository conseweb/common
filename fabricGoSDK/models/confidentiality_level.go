package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*ConfidentialityLevel Confidentiality level of the Chaincode.

swagger:model ConfidentialityLevel
*/
type ConfidentialityLevel string

// for schema
var confidentialityLevelEnum []interface{}

func (m ConfidentialityLevel) validateConfidentialityLevelEnum(path, location string, value ConfidentialityLevel) error {
	if confidentialityLevelEnum == nil {
		var res []ConfidentialityLevel
		if err := json.Unmarshal([]byte(`["PUBLIC","CONFIDENTIAL"]`), &res); err != nil {
			return err
		}
		for _, v := range res {
			confidentialityLevelEnum = append(confidentialityLevelEnum, v)
		}
	}
	if err := validate.Enum(path, location, value, confidentialityLevelEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this confidentiality level
func (m ConfidentialityLevel) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateConfidentialityLevelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
